/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import atomics.Room;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Geeo
 */
public class RoomsListPanel extends javax.swing.JPanel {

    /**
     * Creates new form ListRooms
     */
    private ArrayList<RoomListItemPanel> roomsItens;

    public RoomsListPanel() {
        initComponents();
        LoadingPanel l = new LoadingPanel("Loading Rooms");
        roomsItens = new ArrayList<RoomListItemPanel>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        roomsListPanelContainer = new javax.swing.JScrollPane();
        listContainer = new javax.swing.JPanel();
        btAdicionarSala = new javax.swing.JButton();
        lbSalas = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        roomsListPanelContainer.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listContainer.setLayout(new javax.swing.BoxLayout(listContainer, javax.swing.BoxLayout.Y_AXIS));
        roomsListPanelContainer.setViewportView(listContainer);

        btAdicionarSala.setText("AdicionarSala");
        btAdicionarSala.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAdicionarSalaMouseClicked(evt);
            }
        });
        btAdicionarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarSalaActionPerformed(evt);
            }
        });

        lbSalas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbSalas.setText("Rooms");

        jTextField1.setToolTipText("Search...");
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomsListPanelContainer)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbSalas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAdicionarSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSalas)
                    .addComponent(btAdicionarSala)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomsListPanelContainer)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarSalaActionPerformed
        AddRoom addroomframe = new AddRoom();
        addroomframe.setVisible(true);
    }//GEN-LAST:event_btAdicionarSalaActionPerformed

    private void btAdicionarSalaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAdicionarSalaMouseClicked

    }//GEN-LAST:event_btAdicionarSalaMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        for (int i = 0; i < roomsItens.size(); i++) {
            if (roomsItens.get(i).getRoom().getName().contains(this.jTextField1.getText())) {
                roomsItens.get(i).setVisible(true);
            } else {
                roomsItens.get(i).setVisible(false);
            }
            this.revalidate();
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        for (int i = 0; i < roomsItens.size(); i++) {
            if (roomsItens.get(i).getRoom().getName().toLowerCase().contains(this.jTextField1.getText().toLowerCase())) {
                roomsItens.get(i).setVisible(true);
            } else {
                roomsItens.get(i).setVisible(false);
            }
            this.revalidate();
        }
    }//GEN-LAST:event_jTextField1CaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarSala;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lbSalas;
    private javax.swing.JPanel listContainer;
    private javax.swing.JScrollPane roomsListPanelContainer;
    // End of variables declaration//GEN-END:variables

    public void refreshExistingRooms(List<Room> rooms) {
        System.out.println("QntRooms" + rooms.size());
        this.listContainer.removeAll();
        if (rooms.size() == 0) {
            NaoExistemRooms nExiste = new NaoExistemRooms();
            nExiste.setVisible(true);
            this.listContainer.add(nExiste);
        } else {
            for (int i = 0; i < rooms.size(); i++) {
                Room r = rooms.get(i);
                RoomListItemPanel r1 = new RoomListItemPanel(r);
                roomsItens.add(r1);
                r1.setVisible(true);
                this.listContainer.add(r1);
                this.listContainer.revalidate();
            }
        }
        revalidate();
    }

    public void refreshUsersCount(long room_id, int add) {
        for (int i = 0; i < roomsItens.size(); i++) {
            if (room_id == roomsItens.get(i).getRoom().getID()) {
                roomsItens.get(i).refreshUsersCount(add);
            }
        }
    }

    void showNewRoomWithoutOpen(Room room) {
        RoomListItemPanel r1 = new RoomListItemPanel(room);
                roomsItens.add(r1);
                r1.setVisible(true);
                this.listContainer.add(r1);
                this.listContainer.revalidate();
        
        
    }
}
